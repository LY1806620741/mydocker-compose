version: "2"
 
services:
  apollo-configservice:                                         ##容器服务名
    container_name: apollo-configservice                        ##容器名
    build: apollobuild/apollo-configservice/                                ##Dockerfile路径
    image: apollo-configservice:1.0.0                           ##镜像名
    restart: always
    # network_mode: host                                          ##网络设置
    networks:
      - apollo
    ports:
      - "8080:8080"
    volumes:
      - "./apollo/logs/100003171:/opt/logs/100003171"    ##将/opt/logs/100003171目录挂载到宿主机的/docker/apollo/logs/100003171方便在宿主机上查看日志
    environment:
      - spring_datasource_url=jdbc:mysql://apollo-db:3306/ApolloConfigDB?characterEncoding=utf8
      - spring_datasource_username=apollo
      - spring_datasource_password=apollo
    depends_on:
      - apollo-db
 
  apollo-adminservice:
    container_name: apollo-adminservice
    build: apollobuild/apollo-adminservice/
    image: apollo-adminservice:1.0.0
    restart: always
    networks:
      - apollo
    ports:
      - "8090:8090"
    depends_on:
      - apollo-configservice
    volumes:
      - "./apollo/logs/100003172:/opt/logs/100003172"
    environment:
      - spring_datasource_url=jdbc:mysql://apollo-db:3306/ApolloConfigDB?characterEncoding=utf8
      - spring_datasource_username=apollo
      - spring_datasource_password=apollo
    depends_on:
      - apollo-db
 
  apollo-portal:
    container_name: apollo-portal
    build: apollobuild/apollo-portal/
    image: apollo-portal:1.0.0
    restart: always
    networks:
      - apollo
    ports:
      - "8070:8070"
    depends_on:
      - apollo-adminservice
    volumes:
      - "./apollo/logs/100003173:/opt/logs/100003173"
    environment:
      - spring_datasource_url=jdbc:mysql://apollo-db:3306/ApolloPortalDB?characterEncoding=utf8
      - spring_datasource_username=apollo
      - spring_datasource_password=apollo
    depends_on:
      - apollo-db
  apollo-db:
    image: mysql
    restart: always
    networks:
      - apollo
    volumes:
      - ./apollo/db:/var/lib/mysql:rw
      - ./apollobuild/dbinit:/docker-entrypoint-initdb.d:ro
    environment:
      - MYSQL_ROOT_PASSWORD=root
networks:
  apollo:
    driver: bridge